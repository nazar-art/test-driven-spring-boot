apiVersion: v1
kind: Pod
metadata:
  name: kuard
  labels:
    app: kuard
#    version: v1
#    techstack: kuard
spec:
#  nodeName: k3d-mycluster-server-0
#  nodeSelector:
#    disk: ssd
#  affinity:
#    podAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        - labelSelector:
#            matchExpressions:
#              - key: security
#                operator: In
#                values:
#                  - S1
#          topologyKey: topology.kubernetes.io/zone
#    nodeAffinity:
#      requiredDuringSchedulingIgnoredDuringExecution:
#        nodeSelectorTerms:
#          - matchFields:
#              - key:
#                operator:
#          - matchExpressions:
#              - key: disktype
#                operator: In
#                values:
#                  - ssd
#            - matchExpressions:
#              - key: kubernetes.io/os
#                operator: In
#                values:
#                  - linux

#      preferredDuringSchedulingIgnoredDuringExecution:
#        - preference:
#            matchFields:
#              - key:
#                operator:
#            matchExpressions:
#              - key:
#                operator:
#          weight:
  containers:
    - name: kuard
      image: gcr.io/kuar-demo/kuard-amd64:1
      resources:
        requests:
          cpu: '100m'
          memory: '10Mi'
        limits:
          cpu: '200m'
          memory: '20Mi'
      startupProbe:
        httpGet:
          path: /healthy
          port: 8080
        timeoutSeconds: 1
        periodSeconds: 5
        failureThreshold: 6
      livenessProbe:
        httpGet:
          path: /healthy
          port: 8080
        timeoutSeconds: 1
        periodSeconds: 10
        failureThreshold: 3
      readinessProbe:
        httpGet:
          path: /ready
          port: 8080
        timeoutSeconds: 1
        periodSeconds: 10
        failureThreshold: 3

#  terminationGracePeriodSeconds: 60
#      lifecycle:
#        postStart:
#          httpGet:
#            path: /warmup
#            port: 8080
#        preStop:
#          httpGet:
#            path: /shutdown
#            port: 8080